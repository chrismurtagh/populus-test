name: CI

on:
  pull_request:
    branches: ['*']
  push:
    branches: ['main', 'dev']

# You can leverage Vercel Remote Caching with Turbo to speed up your builds
# @link https://turborepo.org/docs/core-concepts/remote-caching#remote-caching-on-vercel-builds
env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}}
  CLERK_SECRET_KEY: ${{secrets.CLERK_SECRET_KEY}}

jobs:
  build-lint:
    env:
      DATABASE_URL: file:./db.sqlite
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4

      - name: Setup Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install deps (with cache)
        run: pnpm install

      - name: web cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/apps/web/.next/cache
          key: ${{ runner.os }}-${{ runner.node }}-${{ hashFiles('**/pnpm-lock.yaml') }}-web

      - name: corp_site cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/apps/corp_site/.next/cache
          key: ${{ runner.os }}-${{ runner.node }}-${{ hashFiles('**/pnpm-lock.yaml') }}-corp_site

      - name: Build, lint and type-check
        run: pnpm turbo build lint type-check

      - name: Check workspaces
        run: pnpm manypkg check
